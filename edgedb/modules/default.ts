// GENERATED by @edgedb/generate v0.5.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $State = {
  "NULL": $.$expr_Literal<$State>;
  "Complie": $.$expr_Literal<$State>;
  "Full": $.$expr_Literal<$State>;
} & $.EnumType<"default::State", ["NULL", "Complie", "Full"]>;
const State: $State = $.makeType<$State>(_.spec, "b8589077-52ef-11ef-a390-17de2f53a6f8", _.syntax.literal);

export type $BaseλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "create_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "modified_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "create_user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, false,  false, true>;
  "modified_user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
}>;
type $Base = $.ObjectType<"default::Base", $BaseλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Base = $.makeType<$Base>(_.spec, "b8360dea-52ef-11ef-9d54-dbae27297257", _.syntax.literal);

const Base: $.$expr_PathNode<$.TypeSet<$Base, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Base, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<$BaseλShape & {
  "password": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "username": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "user_info": $.LinkDesc<$UserInfo, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<create_user[is Base]": $.LinkDesc<$Base, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is Admin]": $.LinkDesc<$Admin, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Base]": $.LinkDesc<$Base, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Admin]": $.LinkDesc<$Admin, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is Tag]": $.LinkDesc<$Tag, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is Tag]": $.LinkDesc<$Tag, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is PostType]": $.LinkDesc<$PostType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is PostType]": $.LinkDesc<$PostType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user[is UserInfo]": $.LinkDesc<$UserInfo, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user[is UserInfo]": $.LinkDesc<$UserInfo, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is UserInfo]": $.LinkDesc<$UserInfo, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<create_user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<modified_user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$Base['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "b8382523-52ef-11ef-bb26-df68bebec501", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $AdminλShape = $.typeutil.flatten<$UserλShape & {
  "enable": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
}>;
type $Admin = $.ObjectType<"default::Admin", $AdminλShape, null, [
  ...$User['__exclusives__'],
]>;
const $Admin = $.makeType<$Admin>(_.spec, "b83b0724-52ef-11ef-aad9-b791436c65f2", _.syntax.literal);

const Admin: $.$expr_PathNode<$.TypeSet<$Admin, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Admin, $.Cardinality.Many), null);

export type $AuthorλShape = $.typeutil.flatten<Omit<$UserλShape, "<author"> & {
  "fun": $.LinkDesc<$Author, $.Cardinality.Many, {}, true, false,  false, false>;
  "follow": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, true,  false, false>;
  "comments": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "posts": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, true,  false, false>;
  "<fun[is Author]": $.LinkDesc<$Author, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<follow[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<follow": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<fun": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Author = $.ObjectType<"default::Author", $AuthorλShape, null, [
  ...$User['__exclusives__'],
  {fun: {__element__: $Author, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Author = $.makeType<$Author>(_.spec, "b8453c19-52ef-11ef-89eb-57141ea0e682", _.syntax.literal);

const Author: $.$expr_PathNode<$.TypeSet<$Author, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Author, $.Cardinality.Many), null);

export type $CommentλShape = $.typeutil.flatten<$BaseλShape & {
  "text": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "recover": $.LinkDesc<$Comment, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "author": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, true,  false, false>;
  "<recover[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comments[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comment[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comment": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comments": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<recover": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Comment = $.ObjectType<"default::Comment", $CommentλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Comment = $.makeType<$Comment>(_.spec, "b84a040d-52ef-11ef-992d-9f5c4c7b040a", _.syntax.literal);

const Comment: $.$expr_PathNode<$.TypeSet<$Comment, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Comment, $.Cardinality.Many), null);

export type $PostλShape = $.typeutil.flatten<$BaseλShape & {
  "state": $.PropertyDesc<$State, $.Cardinality.AtMostOne, false, false, false, true>;
  "body": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "post_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "author": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "comment": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "tags": $.LinkDesc<$Tag, $.Cardinality.Many, {}, false, false,  false, false>;
  "post_type": $.LinkDesc<$PostType, $.Cardinality.Many, {}, false, true,  false, false>;
  "<posts[is PostType]": $.LinkDesc<$PostType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<posts[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<posts[is Tag]": $.LinkDesc<$Tag, $.Cardinality.Many, {}, false, false,  false, false>;
  "<posts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Post = $.ObjectType<"default::Post", $PostλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Post = $.makeType<$Post>(_.spec, "b8589c94-52ef-11ef-a0a6-8b2b1b86b9fe", _.syntax.literal);

const Post: $.$expr_PathNode<$.TypeSet<$Post, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Post, $.Cardinality.Many), null);

export type $PostTypeλShape = $.typeutil.flatten<$BaseλShape & {
  "text": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "posts": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "child_type": $.LinkDesc<$PostType, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<child_type[is PostType]": $.LinkDesc<$PostType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<post_type[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<child_type": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<post_type": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $PostType = $.ObjectType<"default::PostType", $PostTypeλShape, null, [
  ...$Base['__exclusives__'],
  {text: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $PostType = $.makeType<$PostType>(_.spec, "d9a8bf3a-5324-11ef-8a3c-fd65a555cb7a", _.syntax.literal);

const PostType: $.$expr_PathNode<$.TypeSet<$PostType, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PostType, $.Cardinality.Many), null);

export type $TagλShape = $.typeutil.flatten<$BaseλShape & {
  "body": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "posts": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, true,  false, false>;
  "<tags[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tags": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Tag = $.ObjectType<"default::Tag", $TagλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Tag = $.makeType<$Tag>(_.spec, "b8661ea1-52ef-11ef-92a9-9705a9c635a6", _.syntax.literal);

const Tag: $.$expr_PathNode<$.TypeSet<$Tag, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Tag, $.Cardinality.Many), null);

export type $UserInfoλShape = $.typeutil.flatten<$BaseλShape & {
  "avatar": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "ip": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<user_info[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user_info[is Author]": $.LinkDesc<$Author, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user_info[is Admin]": $.LinkDesc<$Admin, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user_info": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $UserInfo = $.ObjectType<"default::UserInfo", $UserInfoλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $UserInfo = $.makeType<$UserInfo>(_.spec, "233057a6-53ed-11ef-b8f8-c72ad3a18480", _.syntax.literal);

const UserInfo: $.$expr_PathNode<$.TypeSet<$UserInfo, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($UserInfo, $.Cardinality.Many), null);

const $default__globals: {  current_user_id: _.syntax.$expr_Global<
              // "default::current_user_id",
              _std.$uuid,
              $.Cardinality.AtMostOne
              >} = {  current_user_id: _.syntax.makeGlobal(
              "default::current_user_id",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000100", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { State, $Base, Base, $User, User, $Admin, Admin, $Author, Author, $Comment, Comment, $Post, Post, $PostType, PostType, $Tag, Tag, $UserInfo, UserInfo };

type __defaultExports = {
  "State": typeof State;
  "Base": typeof Base;
  "User": typeof User;
  "Admin": typeof Admin;
  "Author": typeof Author;
  "Comment": typeof Comment;
  "Post": typeof Post;
  "PostType": typeof PostType;
  "Tag": typeof Tag;
  "UserInfo": typeof UserInfo;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "State": State,
  "Base": Base,
  "User": User,
  "Admin": Admin,
  "Author": Author,
  "Comment": Comment,
  "Post": Post,
  "PostType": PostType,
  "Tag": Tag,
  "UserInfo": UserInfo,
  "global": $default__globals
};
export default __defaultExports;
